Version 0.7 r150
released 6/13/2011
---

 * Replace pthread emulation macros with winpthreads.h from 
   http://locklessinc.com/articles/pthreads_on_windows/
 
 * Fix witem_cache test to link on solaris also

 * Avoid possible overrun of priority level

 * Fixed possible deadlock.

 * Cleaned up witem cache interface and usage for easier reading of code.

 * Link with libumem on Solaris

 * Add -Wextra to CFLAGS and fix the related warnings

 * Implement the workqueue overcommit attribute.
   Make wqlist an array instead of an array of lists.
   Change wqlist_scan() to be more efficient.

Version 0.6 r134
released 5/16/2011
---

 * Add a pthread_atfork() handler to reinitialize the library after fork().

 * Defer the manager thread creation until pthread_workqueue_create_np().

Version 0.5.1 r125
released 5/7/2011
---

 * Fix the testing/latency Makefile to work on 32-bit Linux.
 * Remove unused variables from testing/latency.c

Version 0.5 r120
released 5/6/2011
---

 * Add CMakeLists.txt for building under CMake.

 * Support building on Windows under MinGW and MSVC.

 * Fixed a deadlock during startup. We could actually raise and get a lost wakeup of the pthread_cond_wait  in manager_init() as the manager already managed to signal before we went to sleep. (happened around 1/1000 of startups on a large multicore).

 * Finetune ramp-up logic when system is under heavy load - allow up to worker_idle_threshold threads regardless of system load, otherwise limit thread creation when system is under NCPU:s load rather than 2*NCPU:s (it is way too late to limit it on a larger multicore machine...).

 * Create a witem_cache_init() function so that the TLS key can be made private to witem_cache.o

 * Fix compilation on 32-bit Linux (Credit: Marius Zwicker)

 * Don't reset the signal mask, it should be blocked for the manager thread (and any subsequently started threads) as well

 * Enabled experimental support for real-time threads scheduling class on Solaris, specify PWQ_RT_THREADS to enable it. Be careful when using, may take all available resources unless used in combination with processor sets, thus effectivively hanging the machine

 * Add option for static library build activated by defining MAKE_STATIC

 * Enable debugging on windows by an environment variable as well

Version 0.4.1 r99
released 3/13/2011
---

 * Add -lpthread to LDFLAGS

Version 0.4 r97
released 3/12/2011
---

 * Improved printf debugging; to use it, define the environment variable "PWQ_DEBUG=yes"

 * New function threads_runnable() determines how many LWPs are on the run queue and uses
   this information to improve the thread pool management heuristic.

 * All ELF symbols are now hidden by default, and only the public API symbols are visible.

 * Improved workqueue ramp-up and ramp-down behavior.

Version 0.3 r81
released 3/6/2011
---

 * Fix DESTDIR support in the 'make install' target.

Version 0.2 r77
released 3/6/2011
---

 * Add support for FreeBSD, Solaris, and Microsoft Windows

 * Fix a race condition that would cause deadlock in rare cases when either:
     1) pthread_cond_signal() was called while no other threads were 
        blocked a call to pthread_cond_wait(), or
     2) pthread_cond_signal() was called multiple times before the any thread
        blocking in a call to pthread_cond_wait() was awoken by the scheduler.

   The fix is to ensure that the call to pthread_cond_signal() occurs while
   the calling thread holds the same mutex used by the threads that call
   pthread_cond_wait().

   Credit to Joakim Johansson for finding the bug and providing a patch.

Version 0.1 r?
released 6/13/2010   
---

  * Initial release for Debian as a patch applied to libdispatch. There 
    was no tarball released for this version.
