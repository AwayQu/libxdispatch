# CMake generated Testfile for 
# Source directory: /Users/away/code/github/testxdispatch/tests
# Build directory: /Users/away/code/github/testxdispatch/b/tests
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(atomic_operations "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "atomic_operations")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(atomic_operations "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "atomic_operations")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(atomic_operations "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "atomic_operations")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(atomic_operations "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "atomic_operations")
else()
  add_test(atomic_operations NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(pthread_api "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "pthread_api")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(pthread_api "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "pthread_api")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(pthread_api "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "pthread_api")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(pthread_api "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "pthread_api")
else()
  add_test(pthread_api NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_dispatch_once "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "test_dispatch_once")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_dispatch_once "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "test_dispatch_once")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_dispatch_once "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "test_dispatch_once")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_dispatch_once "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "test_dispatch_once")
else()
  add_test(test_dispatch_once NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_api "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_api")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_api "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_api")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_api "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_api")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_api "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_api")
else()
  add_test(dispatch_api NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_simpleFunction "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_simpleFunction")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_simpleFunction "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_simpleFunction")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_simpleFunction "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_simpleFunction")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_simpleFunction "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_simpleFunction")
else()
  add_test(dispatch_simpleFunction NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_test_sync "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_test_sync")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_test_sync "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_test_sync")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_test_sync "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_test_sync")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_test_sync "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_test_sync")
else()
  add_test(dispatch_test_sync NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_testDebug "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_testDebug")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_testDebug "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_testDebug")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_testDebug "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_testDebug")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_testDebug "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_testDebug")
else()
  add_test(dispatch_testDebug NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_apply_function "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_apply_function")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_apply_function "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_apply_function")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_apply_function "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_apply_function")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_apply_function "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_apply_function")
else()
  add_test(dispatch_apply_function NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_priority "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_priority")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_priority "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_priority")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_priority "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_priority")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_priority "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_priority")
else()
  add_test(dispatch_priority NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_priority2 "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_priority2")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_priority2 "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_priority2")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_priority2 "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_priority2")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_priority2 "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_priority2")
else()
  add_test(dispatch_priority2 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_cascade "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_cascade")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_cascade "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_cascade")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_cascade "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_cascade")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_cascade "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_cascade")
else()
  add_test(dispatch_cascade NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_apply_serialqueue "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_apply_serialqueue")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_apply_serialqueue "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_apply_serialqueue")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_apply_serialqueue "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_apply_serialqueue")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_apply_serialqueue "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_apply_serialqueue")
else()
  add_test(dispatch_apply_serialqueue NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_after_function "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_after_function")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_after_function "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_after_function")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_after_function "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_after_function")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_after_function "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_after_function")
else()
  add_test(dispatch_after_function NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_queue_finalizer "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "test_queue_finalizer")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_queue_finalizer "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "test_queue_finalizer")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_queue_finalizer "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "test_queue_finalizer")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_queue_finalizer "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "test_queue_finalizer")
else()
  add_test(test_queue_finalizer NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_memory_use "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_memory_use")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_memory_use "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_memory_use")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_memory_use "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_memory_use")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_memory_use "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_memory_use")
else()
  add_test(dispatch_memory_use NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_group_function "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_group_function")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_group_function "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_group_function")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_group_function "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_group_function")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_group_function "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_group_function")
else()
  add_test(dispatch_group_function NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_socket_read_write "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_socket_read_write")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_socket_read_write "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_socket_read_write")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_socket_read_write "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_socket_read_write")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_socket_read_write "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_socket_read_write")
else()
  add_test(dispatch_socket_read_write NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_plusplus_blocks "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_plusplus_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_plusplus_blocks "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_plusplus_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_plusplus_blocks "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_plusplus_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_plusplus_blocks "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_plusplus_blocks")
else()
  add_test(dispatch_plusplus_blocks NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_apply_blocks "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_apply_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_apply_blocks "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_apply_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_apply_blocks "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_apply_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_apply_blocks "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_apply_blocks")
else()
  add_test(dispatch_apply_blocks NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_after_blocks "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_after_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_after_blocks "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_after_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_after_blocks "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_after_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_after_blocks "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_after_blocks")
else()
  add_test(dispatch_after_blocks NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_group_blocks "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_group_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_group_blocks "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_group_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_group_blocks "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_group_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_group_blocks "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_group_blocks")
else()
  add_test(dispatch_group_blocks NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_pingpong_blocks "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_pingpong_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_pingpong_blocks "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_pingpong_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_pingpong_blocks "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_pingpong_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_pingpong_blocks "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_pingpong_blocks")
else()
  add_test(dispatch_pingpong_blocks NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_semaphore_blocks "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_semaphore_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_semaphore_blocks "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_semaphore_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_semaphore_blocks "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_semaphore_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_semaphore_blocks "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_semaphore_blocks")
else()
  add_test(dispatch_semaphore_blocks NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_drift_blocks "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_drift_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_drift_blocks "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_drift_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_drift_blocks "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_drift_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_drift_blocks "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_drift_blocks")
else()
  add_test(dispatch_drift_blocks NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_timer_bit31_blocks "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_timer_bit31_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_timer_bit31_blocks "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_timer_bit31_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_timer_bit31_blocks "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_timer_bit31_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_timer_bit31_blocks "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_timer_bit31_blocks")
else()
  add_test(dispatch_timer_bit31_blocks NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(dispatch_timer_bit63_blocks "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "dispatch_timer_bit63_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(dispatch_timer_bit63_blocks "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "dispatch_timer_bit63_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(dispatch_timer_bit63_blocks "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "dispatch_timer_bit63_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(dispatch_timer_bit63_blocks "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "dispatch_timer_bit63_blocks")
else()
  add_test(dispatch_timer_bit63_blocks NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_debug "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_debug")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_debug "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_debug")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_debug "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_debug")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_debug "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_debug")
else()
  add_test(cxx_dispatch_debug NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_group "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_group")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_group "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_group")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_group "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_group")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_group "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_group")
else()
  add_test(cxx_dispatch_group NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_mainqueue "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_mainqueue")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_mainqueue "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_mainqueue")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_mainqueue "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_mainqueue")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_mainqueue "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_mainqueue")
else()
  add_test(cxx_dispatch_mainqueue NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_semaphore "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_semaphore")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_semaphore "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_semaphore")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_semaphore "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_semaphore")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_semaphore "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_semaphore")
else()
  add_test(cxx_dispatch_semaphore NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_current "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_current")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_current "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_current")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_current "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_current")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_current "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_current")
else()
  add_test(cxx_dispatch_current NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_timer "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_timer")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_timer "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_timer")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_timer "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_timer")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_timer "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_timer")
else()
  add_test(cxx_dispatch_timer NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_once1 "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_once1")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_once1 "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_once1")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_once1 "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_once1")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_once1 "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_once1")
else()
  add_test(cxx_dispatch_once1 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_synchronized "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_synchronized")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_synchronized "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_synchronized")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_synchronized "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_synchronized")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_synchronized "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_synchronized")
else()
  add_test(cxx_synchronized NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_cascade_blocks "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_cascade_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_cascade_blocks "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_cascade_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_cascade_blocks "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_cascade_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_cascade_blocks "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_cascade_blocks")
else()
  add_test(cxx_dispatch_cascade_blocks NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_group_blocks "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_group_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_group_blocks "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_group_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_group_blocks "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_group_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_group_blocks "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_group_blocks")
else()
  add_test(cxx_dispatch_group_blocks NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_once2_blocks "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_once2_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_once2_blocks "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_once2_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_once2_blocks "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_once2_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_once2_blocks "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_once2_blocks")
else()
  add_test(cxx_dispatch_once2_blocks NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_once3_blocks "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_once3_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_once3_blocks "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_once3_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_once3_blocks "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_once3_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_once3_blocks "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_once3_blocks")
else()
  add_test(cxx_dispatch_once3_blocks NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_queue_blocks "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_queue_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_queue_blocks "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_queue_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_queue_blocks "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_queue_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_queue_blocks "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_queue_blocks")
else()
  add_test(cxx_dispatch_queue_blocks NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_read_blocks "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_read_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_read_blocks "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_read_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_read_blocks "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_read_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_read_blocks "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_read_blocks")
else()
  add_test(cxx_dispatch_read_blocks NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_serialqueue_blocks "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_serialqueue_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_serialqueue_blocks "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_serialqueue_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_serialqueue_blocks "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_serialqueue_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_serialqueue_blocks "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_serialqueue_blocks")
else()
  add_test(cxx_dispatch_serialqueue_blocks NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_source_blocks "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_source_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_source_blocks "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_source_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_source_blocks "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_source_blocks")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_source_blocks "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_source_blocks")
else()
  add_test(cxx_dispatch_source_blocks NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_free_lambda "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_free_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_free_lambda "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_free_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_free_lambda "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_free_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_free_lambda "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_free_lambda")
else()
  add_test(cxx_free_lambda NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_cascade_lambda "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_cascade_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_cascade_lambda "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_cascade_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_cascade_lambda "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_cascade_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_cascade_lambda "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_cascade_lambda")
else()
  add_test(cxx_dispatch_cascade_lambda NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_group_lambda "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_group_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_group_lambda "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_group_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_group_lambda "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_group_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_group_lambda "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_group_lambda")
else()
  add_test(cxx_dispatch_group_lambda NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_once2_lambda "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_once2_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_once2_lambda "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_once2_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_once2_lambda "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_once2_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_once2_lambda "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_once2_lambda")
else()
  add_test(cxx_dispatch_once2_lambda NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_queue_lambda "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_queue_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_queue_lambda "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_queue_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_queue_lambda "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_queue_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_queue_lambda "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_queue_lambda")
else()
  add_test(cxx_dispatch_queue_lambda NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_read_lambda "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_read_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_read_lambda "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_read_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_read_lambda "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_read_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_read_lambda "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_read_lambda")
else()
  add_test(cxx_dispatch_read_lambda NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_proc_lambda "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_proc_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_proc_lambda "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_proc_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_proc_lambda "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_proc_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_proc_lambda "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_proc_lambda")
else()
  add_test(cxx_dispatch_proc_lambda NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_serialqueue_lambda "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_serialqueue_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_serialqueue_lambda "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_serialqueue_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_serialqueue_lambda "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_serialqueue_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_serialqueue_lambda "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_serialqueue_lambda")
else()
  add_test(cxx_dispatch_serialqueue_lambda NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cxx_dispatch_source_lambda "/Users/away/code/github/testxdispatch/b/bin/Debug/xdispatch_testsD" "-n" "cxx_dispatch_source_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cxx_dispatch_source_lambda "/Users/away/code/github/testxdispatch/b/bin/Release/xdispatch_tests" "-n" "cxx_dispatch_source_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cxx_dispatch_source_lambda "/Users/away/code/github/testxdispatch/b/bin/MinSizeRel/xdispatch_tests" "-n" "cxx_dispatch_source_lambda")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cxx_dispatch_source_lambda "/Users/away/code/github/testxdispatch/b/bin/RelWithDebInfo/xdispatch_tests" "-n" "cxx_dispatch_source_lambda")
else()
  add_test(cxx_dispatch_source_lambda NOT_AVAILABLE)
endif()
subdirs("munit")
